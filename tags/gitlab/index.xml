<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gitlab on Leandro Santos</title>
    <link>/tags/gitlab/</link>
    <description>Recent content in gitlab on Leandro Santos</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sat, 11 Apr 2020 07:13:50 +0000</lastBuildDate>
    
	<atom:link href="/tags/gitlab/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gitlab-ci</title>
      <link>/posts/2020/04/gitlab-ci/</link>
      <pubDate>Sat, 11 Apr 2020 07:13:50 +0000</pubDate>
      
      <guid>/posts/2020/04/gitlab-ci/</guid>
      <description>Série Docker
O que gitlab-ci + links Gitlab-runner Como usar gitlab-ci + docker Build: stage: build before_script: - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY script: - docker build --file Dockerfile --tag $IMAGE_TAG . - docker push $IMAGE_TAG only: refs: - master changes: - &amp;#34;Dockerfile&amp;#34; - &amp;#34;requirements.txt&amp;#34; Atualiza imagem produção: stage: build script: - ssh server &amp;#34;docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &amp;amp;&amp;amp; docker pull $IMAGE_TAG&amp;#34; - ssh server &amp;#34;docker container&amp;#34; </description>
    </item>
    
  </channel>
</rss>